{"ast":null,"code":"import _regeneratorRuntime from \"D:/Github/teamWork/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/Github/teamWork/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default {\n  data: function data() {\n    return {\n      phonenumber: '',\n      password: '',\n      loginError: ''\n    };\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, data, errorData;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('http://api2.andylive.cn/api/login', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  phonenumber: _this.phonenumber,\n                  password: _this.password\n                })\n              });\n            case 3:\n              response = _context.sent;\n              if (!(response.status === 200)) {\n                _context.next = 15;\n                break;\n              }\n              _context.next = 7;\n              return response.json();\n            case 7:\n              data = _context.sent;\n              console.log('Login successful', data);\n              localStorage.setItem('token', data.token);\n              localStorage.setItem('userId', data.userId);\n              localStorage.setItem('username', data.username);\n              _this.$router.push('/GameStart');\n              _context.next = 19;\n              break;\n            case 15:\n              _context.next = 17;\n              return response.json();\n            case 17:\n              errorData = _context.sent;\n              _this.loginError = '登录失败: ' + errorData.error;\n            case 19:\n              _context.next = 25;\n              break;\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](0);\n              _this.loginError = '登录失败，请检查网络连接';\n              console.error('Login error', _context.t0);\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 21]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["data","phonenumber","password","loginError","methods","login","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","errorData","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","sent","status","json","console","log","localStorage","setItem","token","userId","username","$router","push","error","t0","stop"],"sources":["D:\\Github\\teamWork\\src\\components\\ShouYe.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <img src=\"../images/logo.png\" alt=\"Logo\" class=\"logo\">\r\n    <h1>抽乌龟</h1>\r\n    <label for=\"username\">账号：</label>\r\n    <input type=\"text\" placeholder=\"请输入账号\" v-model=\"phonenumber\"><br>\r\n    <label for=\"password\">密码：</label>\r\n    <input type=\"password\" placeholder=\"请输入密码\" v-model=\"password\"><br>\r\n    <button @click=\"login\">登录</button>\r\n    <p v-if=\"loginError\">{{ loginError }}</p>\r\n    <router-link to=\"/zhuce\">\r\n      <a href=\"ZhuCe.vue\">新用户注册</a><br>\r\n    </router-link>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"js\">\r\n    export default {\r\n\r\n  data() {\r\n    return {\r\n      phonenumber: '',\r\n      password: '',\r\n      loginError: ''\r\n    };\r\n  },\r\n  methods: {\r\n    async login() {\r\n      try {\r\n        const response = await fetch('http://api2.andylive.cn/api/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            phonenumber: this.phonenumber,\r\n            password: this.password\r\n          })\r\n        });\r\n        if (response.status === 200) {\r\n          const data = await response.json();\r\n          console.log('Login successful', data);\r\n          localStorage.setItem('token', data.token);\r\n          localStorage.setItem('userId', data.userId);\r\n          localStorage.setItem('username', data.username);\r\n          this.$router.push('/GameStart');\r\n        } else {\r\n          const errorData = await response.json();\r\n          this.loginError = '登录失败: ' + errorData.error;\r\n        }\r\n      } catch (error) {\r\n        this.loginError = '登录失败，请检查网络连接';\r\n        console.error('Login error', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n</script>\r\n\r\n\r\n    \r\n    <style scoped>  \r\n\r\n \r\n    .container {  \r\n      background-color: rgb(241, 252, 232);  \r\n      \r\n    \r\n   position:fixed;\r\n      top:100px;\r\n\r\n    height: 100vh;\r\n    padding: 20px;\r\n        text-align: center;   \r\n      \r\n    }  \r\n    \r\n\r\n    .logo {  \r\n        width: 200px;  \r\n        height: 200px;  \r\n        margin-bottom: 20px;  \r\n       \r\n    }  \r\n    h1 {   \r\n        font-size: 24px;  \r\n        margin-bottom: 20px;  \r\n        \r\n    }  \r\n    input {  \r\n        margin-bottom: 10px;  \r\n        width: 200px;  \r\n        padding: 10px;  \r\n        \r\n    }  \r\n    a {   \r\n        color: #007bff;  \r\n        text-decoration: none;  \r\n        margin-top: 20px;  \r\n       \r\n    }  \r\n    button {  \r\n        padding: 10px 50px;  \r\n        font-size: 16px;  \r\n        background-color: #007bff;  \r\n        color: #fff;  \r\n        border: none;  \r\n        border-radius: 5px;  \r\n        cursor: pointer;  \r\n    }  \r\n    button:hover {  \r\n        background-color: #0056b3; \r\n\r\n    }  \r\n   \r\n</style>\r\n"],"mappings":";;;;;AAiBI,eAAe;EAEjBA,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACDC,KAAK,WAAAA,MAAA,EAAG;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA,EAAAX,IAAA,EAAAY,SAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEaC,KAAK,CAAC,mCAAmC,EAAE;gBAChEC,MAAM,EAAE,MAAM;gBACdC,OAAO,EAAE;kBACP,cAAc,EAAE;gBAClB,CAAC;gBACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;kBACnBtB,WAAW,EAAEK,KAAI,CAACL,WAAW;kBAC7BC,QAAQ,EAAEI,KAAI,CAACJ;gBACjB,CAAC;cACH,CAAC,CAAC;YAAA;cATIS,QAAO,GAAAI,QAAA,CAAAS,IAAA;cAAA,MAUTb,QAAQ,CAACc,MAAK,KAAM,GAAG;gBAAAV,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACNN,QAAQ,CAACe,IAAI,CAAC,CAAC;YAAA;cAA5B1B,IAAG,GAAAe,QAAA,CAAAS,IAAA;cACTG,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE5B,IAAI,CAAC;cACrC6B,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE9B,IAAI,CAAC+B,KAAK,CAAC;cACzCF,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAE9B,IAAI,CAACgC,MAAM,CAAC;cAC3CH,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE9B,IAAI,CAACiC,QAAQ,CAAC;cAC/C3B,KAAI,CAAC4B,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;cAAApB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OAEPN,QAAQ,CAACe,IAAI,CAAC,CAAC;YAAA;cAAjCd,SAAQ,GAAAG,QAAA,CAAAS,IAAA;cACdlB,KAAI,CAACH,UAAS,GAAI,QAAO,GAAIS,SAAS,CAACwB,KAAK;YAAA;cAAArB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAsB,EAAA,GAAAtB,QAAA;cAG9CT,KAAI,CAACH,UAAS,GAAI,cAAc;cAChCwB,OAAO,CAACS,KAAK,CAAC,aAAa,EAAArB,QAAA,CAAAsB,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAtB,QAAA,CAAAuB,IAAA;UAAA;QAAA,GAAA5B,OAAA;MAAA;IAEvC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}