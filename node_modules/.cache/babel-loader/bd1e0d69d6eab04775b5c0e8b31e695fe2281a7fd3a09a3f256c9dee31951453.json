{"ast":null,"code":"import _regeneratorRuntime from \"D:/Github/teamWork/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/Github/teamWork/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default {\n  data: function data() {\n    return {\n      phonenumber: '',\n      // 这里使用 phonenumber 而不是 username\n      password: '',\n      loginError: ''\n    };\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, data, errorData;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('http://api2.andylive.cn/api/login', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  phonenumber: _this.phonenumber,\n                  // API 期望的字段\n                  password: _this.password\n                })\n              });\n            case 3:\n              response = _context.sent;\n              if (!(response.status === 200)) {\n                _context.next = 15;\n                break;\n              }\n              _context.next = 7;\n              return response.json();\n            case 7:\n              data = _context.sent;\n              console.log('Login successful', data);\n              localStorage.setItem('token', data.token);\n              localStorage.setItem('userId', data.userId);\n              localStorage.setItem('username', data.username); // 或其他您需要保存的信息\n              // 登录成功后的跳转逻辑\n              _this.$router.push('/home'); // 更改为您的成功路由\n              _context.next = 19;\n              break;\n            case 15:\n              _context.next = 17;\n              return response.json();\n            case 17:\n              errorData = _context.sent;\n              _this.loginError = errorData.message || '登录失败，请检查手机号和密码';\n            case 19:\n              _context.next = 25;\n              break;\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](0);\n              _this.loginError = '登录请求失败，请检查网络连接';\n              console.error('Login failed', _context.t0);\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 21]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["data","phonenumber","password","loginError","methods","login","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","errorData","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","sent","status","json","console","log","localStorage","setItem","token","userId","username","$router","push","message","t0","error","stop"],"sources":["D:\\Github\\teamWork\\src\\components\\HouTai.vue"],"sourcesContent":["\r\n<template>\r\n  <div class=\"container\">\r\n    <img src=\"../images/yonghu.png\" alt=\"Logo\" class=\"logo\">\r\n    <div>\r\n      <i class=\"fa fa-user user-icon\"></i>\r\n      <label for=\"phonenumber\" style=\"padding-left: 30px;\">账号：</label>\r\n      <input type=\"text\" v-model=\"phonenumber\" placeholder=\"请输入账号\"><br> <!-- 更新 v-model 绑定 -->\r\n      <i class=\"fa fa-lock password-icon\"></i>\r\n      <label for=\"password\" style=\"padding-left: 30px;\">密码：</label>\r\n      <input type=\"password\" v-model=\"password\" placeholder=\"请输入密码\"><br>\r\n      <button @click=\"login\">登录</button>\r\n      <p v-if=\"loginError\" style=\"color: red;\">{{ loginError }}</p> <!-- 显示登录错误信息 -->\r\n    </div>\r\n    <router-link to=\"/houtaizhuce\">\r\n\r\n    </router-link>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"js\">\r\nexport default {\r\n  data() {\r\n    return {\r\n      phonenumber: '', // 这里使用 phonenumber 而不是 username\r\n      password: '',\r\n      loginError: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async login() {\r\n      try {\r\n        const response = await fetch('http://api2.andylive.cn/api/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            phonenumber: this.phonenumber, // API 期望的字段\r\n            password: this.password\r\n          })\r\n        });\r\n        if (response.status === 200) {\r\n          const data = await response.json();\r\n          console.log('Login successful', data);\r\n          localStorage.setItem('token', data.token);\r\n          localStorage.setItem('userId', data.userId);\r\n          localStorage.setItem('username', data.username); // 或其他您需要保存的信息\r\n          // 登录成功后的跳转逻辑\r\n          this.$router.push('/home'); // 更改为您的成功路由\r\n        } else {\r\n          const errorData = await response.json();\r\n          this.loginError = errorData.message || '登录失败，请检查手机号和密码';\r\n        }\r\n      } catch (error) {\r\n        this.loginError = '登录请求失败，请检查网络连接';\r\n        console.error('Login failed', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n  .my-image {\r\n    width: 80px;\r\n    height: auto; /* 保持宽高比 */\r\n    text-align: center;\r\n    margin-left: 700px;\r\n  }\r\n  \r\n  .container {\r\n    margin-left: 600px;\r\n    align-items: center;\r\n    margin-left: 600px;\r\n    flex-direction: column;\r\n    margin-top: 200px;\r\n  }\r\n  \r\n  .logo {\r\n    width: 100px;\r\n    height: 100px;\r\n    margin-bottom: 20px;\r\n    margin-left: 130px;\r\n  }\r\n  \r\n  h1 {\r\n    font-size: 24px;\r\n    margin-bottom: 20px;\r\n    margin-top: 0;\r\n  }\r\n  \r\n  input {\r\n    margin-bottom: 20px;\r\n    width: 200px;\r\n    padding: 10px;\r\n  }\r\n  \r\n  a {\r\n    color: #007bff;\r\n    text-decoration: none;\r\n    margin-top: 20px;\r\n    margin-left: 70px;\r\n  }\r\n  \r\n  button {\r\n    padding: 10px 50px;\r\n    font-size: 16px;\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    margin-top: 20px;\r\n    margin-left: 110px;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n</style>\r\n"],"mappings":";;;;;AAqBA,eAAe;EACbA,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MAAE;MACjBC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACDC,KAAK,WAAAA,MAAA,EAAG;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA,EAAAX,IAAA,EAAAY,SAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEaC,KAAK,CAAC,mCAAmC,EAAE;gBAChEC,MAAM,EAAE,MAAM;gBACdC,OAAO,EAAE;kBACP,cAAc,EAAE;gBAClB,CAAC;gBACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;kBACnBtB,WAAW,EAAEK,KAAI,CAACL,WAAW;kBAAE;kBAC/BC,QAAQ,EAAEI,KAAI,CAACJ;gBACjB,CAAC;cACH,CAAC,CAAC;YAAA;cATIS,QAAO,GAAAI,QAAA,CAAAS,IAAA;cAAA,MAUTb,QAAQ,CAACc,MAAK,KAAM,GAAG;gBAAAV,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACNN,QAAQ,CAACe,IAAI,CAAC,CAAC;YAAA;cAA5B1B,IAAG,GAAAe,QAAA,CAAAS,IAAA;cACTG,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE5B,IAAI,CAAC;cACrC6B,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE9B,IAAI,CAAC+B,KAAK,CAAC;cACzCF,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAE9B,IAAI,CAACgC,MAAM,CAAC;cAC3CH,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE9B,IAAI,CAACiC,QAAQ,CAAC,EAAE;cACjD;cACA3B,KAAI,CAAC4B,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC,EAAE;cAAApB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OAEJN,QAAQ,CAACe,IAAI,CAAC,CAAC;YAAA;cAAjCd,SAAQ,GAAAG,QAAA,CAAAS,IAAA;cACdlB,KAAI,CAACH,UAAS,GAAIS,SAAS,CAACwB,OAAM,IAAK,gBAAgB;YAAA;cAAArB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAsB,EAAA,GAAAtB,QAAA;cAGzDT,KAAI,CAACH,UAAS,GAAI,gBAAgB;cAClCwB,OAAO,CAACW,KAAK,CAAC,cAAc,EAAAvB,QAAA,CAAAsB,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAtB,QAAA,CAAAwB,IAAA;UAAA;QAAA,GAAA7B,OAAA;MAAA;IAExC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}