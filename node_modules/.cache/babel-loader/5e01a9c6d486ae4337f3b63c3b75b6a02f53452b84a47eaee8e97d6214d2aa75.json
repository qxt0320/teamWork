{"ast":null,"code":"import _regeneratorRuntime from \"D:/Github/teamWork/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/Github/teamWork/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default {\n  data: function data() {\n    return {\n      username: '',\n      phonenumber: '',\n      password: '',\n      registerError: ''\n    };\n  },\n  methods: {\n    register: function register() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, data, errorData;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('http://api2.andylive.cn/api/register', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  yourname: _this.username,\n                  phonenumber: _this.phonenumber,\n                  password: _this.password\n                })\n              });\n            case 3:\n              response = _context.sent;\n              if (!(response.status === 200)) {\n                _context.next = 13;\n                break;\n              }\n              _context.next = 7;\n              return response.json();\n            case 7:\n              data = _context.sent;\n              console.log('Registration successful', data);\n              localStorage.setItem('token', data.token);\n              _this.$router.push('/SucceedPage');\n              _context.next = 17;\n              break;\n            case 13:\n              _context.next = 15;\n              return response.json();\n            case 15:\n              errorData = _context.sent;\n              _this.registerError = errorData.message; // 显示具体的错误信息\n            case 17:\n              _context.next = 23;\n              break;\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](0);\n              _this.registerError = '网络错误或服务器不可达';\n              console.error('Registration failed', _context.t0);\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 19]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["data","username","phonenumber","password","registerError","methods","register","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","errorData","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","yourname","sent","status","json","console","log","localStorage","setItem","token","$router","push","message","t0","error","stop"],"sources":["D:\\Github\\teamWork\\src\\components\\ZhuCe.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <img src=\"../images/zuche.png\" alt=\"Logo\" class=\"logo\">\r\n\r\n    <label for=\"name\">昵称:</label>\r\n    <input type=\"text\" placeholder=\"请输入昵称\" v-model=\"username\"><br> <!-- 昵称输入绑定到 username -->\r\n    <label for=\"phone\">账号:</label>\r\n    <input type=\"text\" placeholder=\"请输入账号\" v-model=\"phonenumber\"><br> <!-- 账号输入绑定到 phonenumber -->\r\n    <label for=\"password\">密码:</label>\r\n    <input type=\"password\" placeholder=\"请输入密码\" v-model=\"password\"><br> <!-- 密码输入绑定到 password -->\r\n    <button @click=\"register\">注册</button> <!-- 点击按钮触发 register 方法 -->\r\n    <p v-if=\"registerError\">{{ registerError }}</p> <!-- 显示注册错误信息 -->\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"js\">\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      phonenumber: '',\r\n      password: '',\r\n      registerError: ''\r\n    };\r\n  },\r\n  methods: {\r\n    async register() {\r\n      try {\r\n        const response = await fetch('http://api2.andylive.cn/api/register', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            yourname: this.username,\r\n            phonenumber: this.phonenumber,\r\n            password: this.password\r\n          })\r\n        });\r\n        if (response.status === 200) {\r\n          const data = await response.json();\r\n          console.log('Registration successful', data);\r\n          localStorage.setItem('token', data.token);\r\n          this.$router.push('/SucceedPage');\r\n        } else {\r\n          const errorData = await response.json();\r\n          this.registerError = errorData.message; // 显示具体的错误信息\r\n        }\r\n      } catch (error) {\r\n        this.registerError = '网络错误或服务器不可达';\r\n        console.error('Registration failed', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n  \r\n<style scoped>  \r\n\r\n\r\n.container {  \r\n\r\n  align-items: center;\r\n  flex-direction: column;\r\n  background-color: rgb(241, 252, 232);\r\n\r\n  height: 100vh;\r\n  padding: 250px 250px;\r\n  margin-left: -300px;\r\n  \r\n}\r\n\r\n.component {\r\n  width: 200%; /* 增大组件的宽度为容器的两倍 */\r\n  height: 200%; /* 增大组件的高度为容器的两倍 */\r\n}\r\n\r\ninput {  \r\nmargin-bottom: 20px;  \r\nwidth: 200px;  \r\npadding: 10px;  \r\n}\r\n.logo {  \r\n  width: 500px;  /* 调整宽度和高度 */  \r\n  height: 500px;  /* 调整宽度和高度 */  \r\n  position: absolute;  \r\n  right: 20px;  \r\n  bottom: 20px;  \r\n}  \r\n  \r\n\r\nbutton {  \r\n  padding: 10px 50px;  \r\n  font-size: 16px;  \r\n  background-color: #007bff;  \r\n  color: #fff;  \r\n  border: none;  \r\n  border-radius: 5px;  \r\n  cursor: pointer;\r\n  margin-left: 60px;\r\n}  \r\n  \r\nbutton:hover {  \r\n  background-color: #0056b3;  \r\n}\r\n  </style>\r\n"],"mappings":";;;;;AAgBA,eAAe;EACbA,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACDC,QAAQ,WAAAA,SAAA,EAAG;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA,EAAAZ,IAAA,EAAAa,SAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEUC,KAAK,CAAC,sCAAsC,EAAE;gBACnEC,MAAM,EAAE,MAAM;gBACdC,OAAO,EAAE;kBACP,cAAc,EAAE;gBAClB,CAAC;gBACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;kBACnBC,QAAQ,EAAElB,KAAI,CAACN,QAAQ;kBACvBC,WAAW,EAAEK,KAAI,CAACL,WAAW;kBAC7BC,QAAQ,EAAEI,KAAI,CAACJ;gBACjB,CAAC;cACH,CAAC,CAAC;YAAA;cAVIS,QAAO,GAAAI,QAAA,CAAAU,IAAA;cAAA,MAWTd,QAAQ,CAACe,MAAK,KAAM,GAAG;gBAAAX,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACNN,QAAQ,CAACgB,IAAI,CAAC,CAAC;YAAA;cAA5B5B,IAAG,GAAAgB,QAAA,CAAAU,IAAA;cACTG,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE9B,IAAI,CAAC;cAC5C+B,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEhC,IAAI,CAACiC,KAAK,CAAC;cACzC1B,KAAI,CAAC2B,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC;cAAAnB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OAETN,QAAQ,CAACgB,IAAI,CAAC,CAAC;YAAA;cAAjCf,SAAQ,GAAAG,QAAA,CAAAU,IAAA;cACdnB,KAAI,CAACH,aAAY,GAAIS,SAAS,CAACuB,OAAO,EAAE;YAAA;cAAApB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAqB,EAAA,GAAArB,QAAA;cAG1CT,KAAI,CAACH,aAAY,GAAI,aAAa;cAClCyB,OAAO,CAACS,KAAK,CAAC,qBAAqB,EAAAtB,QAAA,CAAAqB,EAAO,CAAC;YAAA;YAAA;cAAA,OAAArB,QAAA,CAAAuB,IAAA;UAAA;QAAA,GAAA5B,OAAA;MAAA;IAE/C;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}